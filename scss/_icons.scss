// https://github.com/sass/sass/issues/659#issuecomment-64819075
@function char($character-code) {
  @if function-exists("selector-append") {
    @return unquote("\"\\#{$character-code}\"");
  }

  @return str-slice("\x", 1, 1) + $character-code;
}

$icon-font-family: VideoJS;

@font-face {
  font-family: $icon-font-family;
  src: url(data:application/font-woff;charset=utf-8;base64,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) format('woff');
  font-weight: normal;
  font-style: normal;
}

// http://sass-lang.com/documentation/file.SASS_REFERENCE.html#maps
$icons: (
          play: 'f101',
          play-circle: 'f102',
          pause: 'f103',
          volume-mute: 'f104',
          volume-low: 'f105',
          volume-mid: 'f106',
          volume-high: 'f107',
          fullscreen-enter: 'f108',
          fullscreen-exit: 'f109',
          square: 'f10a',
          spinner: 'f10b',
          subtitles: 'f10c',
          captions: 'f10d',
          chapters: 'f10e',
          share: 'f10f',
          cog: 'f110',
          circle: 'f111',
          circle-outline: 'f112',
          circle-inner-circle: 'f113',
          hd: 'f114',
          cancel: 'f115',
          replay: 'f116',
          facebook: 'f117',
          gplus: 'f118',
          linkedin: 'f119',
          twitter: 'f11a',
          tumblr: 'f11b',
          pinterest: 'f11c',
          audio-description: 'f11d',
          audio: 'f11e',
          next-item: 'f11f',
          previous-item: 'f120',
          picture-in-picture-enter: 'f121',
          picture-in-picture-exit: 'f122',
          schedule: 'f123',
          integration-instructions: 'f124',
);

// NOTE: This is as complex as we want to get with SCSS functionality.
//
// Now that we have a map of icons above, we can iterate over that map and create an icon class
// for each icon in that list. The iterator below produces CSS classes like this:
//
// .vjs-icon-play {
//   font-family: VideoJS;
//   font-weight: normal;
//   font-style: normal;
// }
// .vjs-icon-play:before { content: "\25b6"; }
//
// We can then use @extend in the codebase when we need to add an icon to a class. @extend builds up
// the selectors for you so you can avoid duplication. This is generally a bad idea, but since each
// icon should only be extended one or two other places, we'll roll with it.
@each $name, $content in $icons {
  .vjs-icon-#{$name} {
    font-family: $icon-font-family;
    font-weight: normal;
    font-style: normal;

    &:before {
      content: char($content);
    }
  }
}
